@using StarGlyph
@using Svg

@page "/"

<PageTitle>StarGlyph</PageTitle>

<div Class="d-flex flex-row my-2 mx-4">
    <MudGrid Spacing=2>
        <MudItem Class="flex-grow-1">
            <MudPaper Height=100% Outlined="true">
                svg here
            </MudPaper>
        </MudItem>
    
        <MudItem xs=5 Class="d-flex flex-column">
            @*Options*@
            <MudExpansionPanels>
                <MudExpansionPanel Text="Options">
                    <MudForm  @bind-IsValid=formSucess>
                        <div Class="d-flex flex-row">
                            <MudText Typo=Typo.body1 Class="my-2 mr-2">Style:</MudText>
                            <MudChipSet @bind-SelectedChip=selectedStyle Filter="true" Mandatory=true>
                                <MudChip Text="Default" Color=Color.Primary Default=true/>
                                <MudChip Text="Strikethrough" Color=Color.Primary/>
                            </MudChipSet>
                         </div>

                        <MudTextField @bind-Value=maxLineLength Label="Max line length" Immediate=true
                            Adornment=Adornment.End AdornmentIcon=@Icons.Material.Outlined.Calculate/>
                        <MudTextField @bind-Value=maxWordsPerLine Label="Max words per line" Immediate=true
                            Adornment=Adornment.End AdornmentIcon=@Icons.Material.Outlined.Calculate/>
                    </MudForm>
                </MudExpansionPanel>
            </MudExpansionPanels>
        </MudItem>
    </MudGrid>
</div>

@code
{
    SvgDocument document;
    string input="Replace this with something funny";

    MudForm? form;
    MudChip? selectedStyle;
    bool formSucess;
    int maxLineLength = 6;
    int maxWordsPerLine = 2;

    void UpdateDocument()
    {
        document = StarGlyphGenerator.StringToSVG(input, new StarGlyphOptions
            {
                horizontalLines = selectedStyle!.Text switch
                {
                    "Default" => false,
                    "Strikethrough" => true,
                    _ => throw new InvalidDataException()
                },
                maxLineLength=maxLineLength,
                maxWordsPerLine = maxWordsPerLine
            });

    }

    public Index()
    {
        document = StarGlyphGenerator.StringToSVG(input);
    }
}